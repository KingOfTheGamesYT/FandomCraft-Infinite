// Date: 09/08/2014 15:39:02
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package assets.fandomcraft.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class modelShadow extends ModelBase
{
  //fields
    ModelRenderer Head;
    ModelRenderer Head1;
    ModelRenderer Head2;
    ModelRenderer Head3;
    ModelRenderer Body;
    ModelRenderer Body1;
    ModelRenderer Body2;
    ModelRenderer Body3;
    ModelRenderer LeftShoulder;
    ModelRenderer LeftArm;
    ModelRenderer RightShoulder;
    ModelRenderer RightArm;
    ModelRenderer Neck;
    ModelRenderer RightLeg;
    ModelRenderer RightFoot;
    ModelRenderer LeftLeg;
    ModelRenderer LeftFoot;
    ModelRenderer LeftAntennae;
    ModelRenderer RightAntennae;
    ModelRenderer RightEye;
    ModelRenderer LeftEye;
  
  public modelShadow()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      Head = new ModelRenderer(this, 0, 0);
      Head.addBox(-10F, -21F, -10F, 20, 20, 20);
      Head.setRotationPoint(0F, -14F, -5F);
      Head.setTextureSize(128, 64);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Head1 = new ModelRenderer(this, 0, 0);
      Head1.addBox(-12F, -8F, -8F, 24, 16, 16);
      Head1.setRotationPoint(0F, -25F, -5F);
      Head1.setTextureSize(128, 64);
      Head1.mirror = true;
      setRotation(Head1, 0F, 0F, 0F);
      Head2 = new ModelRenderer(this, 0, 0);
      Head2.addBox(-8F, -8F, -12F, 16, 16, 24);
      Head2.setRotationPoint(0F, -25F, -5F);
      Head2.setTextureSize(128, 64);
      Head2.mirror = true;
      setRotation(Head2, 0F, 0F, 0F);
      Head3 = new ModelRenderer(this, 0, 0);
      Head3.addBox(-8F, -12F, -8F, 16, 24, 16);
      Head3.setRotationPoint(0F, -25F, -5F);
      Head3.setTextureSize(128, 64);
      Head3.mirror = true;
      setRotation(Head3, 0F, 0F, 0F);
      Body = new ModelRenderer(this, 0, 0);
      Body.addBox(-6F, -6F, -10F, 12, 12, 20);
      Body.setRotationPoint(0F, 0F, 0F);
      Body.setTextureSize(128, 64);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      Body1 = new ModelRenderer(this, 0, 0);
      Body1.addBox(-10F, -6F, -6F, 20, 12, 12);
      Body1.setRotationPoint(0F, 0F, 0F);
      Body1.setTextureSize(128, 64);
      Body1.mirror = true;
      setRotation(Body1, 0F, 0F, 0F);
      Body2 = new ModelRenderer(this, 0, 0);
      Body2.addBox(-8F, -8F, -8F, 16, 16, 16);
      Body2.setRotationPoint(0F, 0F, 0F);
      Body2.setTextureSize(128, 64);
      Body2.mirror = true;
      setRotation(Body2, 0F, 0F, 0F);
      Body3 = new ModelRenderer(this, 0, 0);
      Body3.addBox(-6F, -10F, -6F, 12, 20, 12);
      Body3.setRotationPoint(0F, 0F, 0F);
      Body3.setTextureSize(128, 64);
      Body3.mirror = true;
      setRotation(Body3, 0F, 0F, 0F);
      LeftShoulder = new ModelRenderer(this, 0, 0);
      LeftShoulder.addBox(-1F, 0F, -1F, 3, 15, 3);
      LeftShoulder.setRotationPoint(9F, -4F, 2F);
      LeftShoulder.setTextureSize(128, 64);
      LeftShoulder.mirror = true;
      setRotation(LeftShoulder, 0.2443461F, 0F, -0.4014257F);
      LeftArm = new ModelRenderer(this, 0, 0);
      LeftArm.addBox(0F, 0F, 0F, 3, 24, 3);
      LeftArm.setRotationPoint(13F, 7F, 4F);
      LeftArm.setTextureSize(128, 64);
      LeftArm.mirror = true;
      setRotation(LeftArm, -0.8726646F, 0F, -0.1919862F);
      RightShoulder = new ModelRenderer(this, 0, 0);
      RightShoulder.addBox(-2F, 0F, -1F, 3, 15, 3);
      RightShoulder.setRotationPoint(-9F, -4F, 1F);
      RightShoulder.setTextureSize(128, 64);
      RightShoulder.mirror = true;
      setRotation(RightShoulder, 0.2443461F, 0F, 0.4014257F);
      RightArm = new ModelRenderer(this, 0, 0);
      RightArm.addBox(-1F, 0F, -2F, 3, 24, 3);
      RightArm.setRotationPoint(-15F, 8F, 5F);
      RightArm.setTextureSize(128, 64);
      RightArm.mirror = true;
      setRotation(RightArm, -0.8726646F, 0F, 0.1919862F);
      Neck = new ModelRenderer(this, 0, 0);
      Neck.addBox(-5F, -10F, -5F, 10, 17, 10);
      Neck.setRotationPoint(0F, -9F, 0F);
      Neck.setTextureSize(128, 64);
      Neck.mirror = true;
      setRotation(Neck, 0.3141593F, 0F, 0F);
      RightLeg = new ModelRenderer(this, 0, 0);
      RightLeg.addBox(-2F, 0F, -2F, 3, 13, 3);
      RightLeg.setRotationPoint(-4F, 9F, 0F);
      RightLeg.setTextureSize(128, 64);
      RightLeg.mirror = true;
      setRotation(RightLeg, 0.4363323F, 0F, 0.2094395F);
      RightFoot = new ModelRenderer(this, 0, 0);
      RightFoot.addBox(-4F, -2F, -8F, 7, 4, 11);
      RightFoot.setRotationPoint(-6F, 20F, 2F);
      RightFoot.setTextureSize(128, 64);
      RightFoot.mirror = true;
      setRotation(RightFoot, 0.3490659F, 0.2617994F, 0F);
      LeftLeg = new ModelRenderer(this, 0, 0);
      LeftLeg.addBox(-1F, 0F, -1F, 3, 13, 3);
      LeftLeg.setRotationPoint(4.5F, 9.5F, -1F);
      LeftLeg.setTextureSize(128, 64);
      LeftLeg.mirror = true;
      setRotation(LeftLeg, 0.4363323F, 0F, -0.2094395F);
      LeftFoot = new ModelRenderer(this, 0, 0);
      LeftFoot.addBox(-3F, -1F, -8F, 7, 4, 11);
      LeftFoot.setRotationPoint(7F, 18.5F, 2F);
      LeftFoot.setTextureSize(128, 64);
      LeftFoot.mirror = true;
      setRotation(LeftFoot, 0.3490659F, -0.2617994F, 0F);
      LeftAntennae = new ModelRenderer(this, 86, 43);
      LeftAntennae.addBox(-20F, -20F, 0F, 20, 20, 1);
      LeftAntennae.setRotationPoint(-8F, -29F, 1F);
      LeftAntennae.setTextureSize(128, 64);
      LeftAntennae.mirror = true;
      setRotation(LeftAntennae, 0.2617994F, 0.6108652F, 0.4363323F);
      RightAntennae = new ModelRenderer(this, 86, 43);
      RightAntennae.addBox(-20F, -20F, 0F, 20, 20, 1);
      RightAntennae.setRotationPoint(7F, -29.5F, 1.5F);
      RightAntennae.setTextureSize(128, 64);
      RightAntennae.mirror = true;
      setRotation(RightAntennae, -0.2617994F, 2.530727F, 0.4363323F);
      RightEye = new ModelRenderer(this, 118, 0);
      RightEye.addBox(-2F, -2F, -2F, 4, 4, 1);
      RightEye.setRotationPoint(-4F, -24F, -15.5F);
      RightEye.setTextureSize(128, 64);
      RightEye.mirror = true;
      setRotation(RightEye, 0F, 0F, 0F);
      LeftEye = new ModelRenderer(this, 118, 0);
      LeftEye.addBox(-2F, -2F, -2F, 4, 4, 1);
      LeftEye.setRotationPoint(4F, -24F, -15.5F);
      LeftEye.setTextureSize(128, 64);
      LeftEye.mirror = true;
      setRotation(LeftEye, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Head.render(f5);
    Head1.render(f5);
    Head2.render(f5);
    Head3.render(f5);
    Body.render(f5);
    Body1.render(f5);
    Body2.render(f5);
    Body3.render(f5);
    LeftShoulder.render(f5);
    LeftArm.render(f5);
    RightShoulder.render(f5);
    RightArm.render(f5);
    Neck.render(f5);
    RightLeg.render(f5);
    RightFoot.render(f5);
    LeftLeg.render(f5);
    LeftFoot.render(f5);
    LeftAntennae.render(f5);
    RightAntennae.render(f5);
    RightEye.render(f5);
    LeftEye.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    this.Neck.rotateAngleY = f3 / (180F / (float)Math.PI);
    this.Neck.rotateAngleX = f4 / (180F / (float)Math.PI);
    this.Head.rotateAngleY = this.Neck.rotateAngleY;
    this.Head.rotateAngleX = this.Neck.rotateAngleX;
    this.RightAntennae.rotateAngleY = this.Head.rotateAngleY;
    this.RightAntennae.rotateAngleX = this.Head.rotateAngleX;
    this.LeftAntennae.rotateAngleY = this.Head.rotateAngleY;
    this.LeftAntennae.rotateAngleX = this.Head.rotateAngleX;
    this.Head1.rotateAngleY = this.Head.rotateAngleY;
    this.Head1.rotateAngleX = this.Head.rotateAngleX;
    this.Head2.rotateAngleY = this.Head.rotateAngleY;
    this.Head2.rotateAngleX = this.Head.rotateAngleX;
    this.Head3.rotateAngleY = this.Head.rotateAngleY;
    this.Head3.rotateAngleX = this.Head.rotateAngleX;
    this.Body1.rotateAngleY = this.Body.rotateAngleY;
    this.Body1.rotateAngleX = this.Body.rotateAngleX;
    this.Body2.rotateAngleY = this.Body.rotateAngleY;
    this.Body2.rotateAngleX = this.Body.rotateAngleX;
    this.Body3.rotateAngleY = this.Body.rotateAngleY;
    this.Body3.rotateAngleX = this.Body.rotateAngleX;
    this.RightShoulder.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
    this.LeftShoulder.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
    this.RightShoulder.rotateAngleZ = 0.0F;
    this.LeftShoulder.rotateAngleZ = 0.0F;
    this.RightArm.rotateAngleY = this.RightShoulder.rotateAngleY;
    this.RightArm.rotateAngleX = this.RightShoulder.rotateAngleX;
    this.LeftArm.rotateAngleY = this.LeftShoulder.rotateAngleY;
    this.LeftArm.rotateAngleX = this.LeftShoulder.rotateAngleX;
    this.RightLeg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.LeftLeg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.RightLeg.rotateAngleY = 0.0F;
    this.LeftLeg.rotateAngleY = 0.0F;
    this.RightFoot.rotateAngleY = this.RightLeg.rotateAngleY;
    this.RightFoot.rotateAngleX = this.RightLeg.rotateAngleX;
    this.LeftFoot.rotateAngleY = this.LeftLeg.rotateAngleY;
    this.LeftFoot.rotateAngleX = this.LeftLeg.rotateAngleX;
  }

}
